/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DE_AE (SQT)
#define DE_UE (LBKT)
#define DE_OE (SEMI)
#define DE_SS (MINUS)
#define DE_-_ (FSLH)

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   LEFT_BRACKET  |
// |  L SHIFT  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | CTRL |  Z  |  X  |  C   |  V   |  B   | POS1|  END |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | WIN  | L ALT  | RET  |  BSPC  |   DEL   |  |   RET   |  SPACE  | ALT GR  | LEFT  | RIGHT |
			bindings = <
	&kp TAB   &kp Q &kp W &kp E &kp R &kp T                                                &kp DE_Z &kp U  &kp I     &kp O   &kp P    &kp DE_UE
	&kp LSHFT   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp DE_OE &kp DE_AE
	&kp LCTRL &kp DE_Y &kp X &kp C &kp V &kp B &kp HOME &kp END        &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp DE_-_ &kp RCTRL
	                 &kp LGUI &kp LALT &kp RET &kp BSPC &kp DEL        &kp RET  &kp SPACE  &kp RALT &kp LEFT &kp RIGHT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
	nums_layer {
			bindings = <
	&kp F11   &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                                              &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F12
	&kp ESC   &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                              &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &trans
	&trans    &trans    &trans    &trans    &kp EQUAL &trans    &trans    &trans      &trans    &trans    &trans    &kp MINUS &trans    &trans    &trans    &trans  
	                              &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans    
			>;
		};
		
		text_layer {
			bindings = <
	&bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &out OUT_TOG                                              &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans    &trans  
	&trans          &trans          &trans          &trans          &trans          &trans                                                    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans    &trans  
	&bt BT_CLR      &trans          &trans          &trans          &trans          &trans          &trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans  
	                                                &trans          &trans          &trans          &trans    &trans      &trans    &trans    &trans    &trans    &trans    
			>;
		};
	};
};